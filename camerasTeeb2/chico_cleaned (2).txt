<?php
session_start();
include 'conexao.php';

$user_id = isset($_SESSION['userId']) ? intval($_SESSION['userId']) : 0;

/**
 * Função que obtém um resumo da história do local a partir da API do Wikipedia.
 * (Mesma função do código anterior)
 */
function getWikipediaHistory($localName)
{
  // ... (mesmo código de antes)
}

/**
 * Função que atualiza o campo 'historia' da câmera no banco, caso esteja vazio.
 */
function updateCameraHistory($conexao, $id, $nome)
{
  // ... (mesmo código de antes)
}

// Verifica se há um termo de busca
$search = isset($_GET['search']) ? trim($_GET['search']) : '';

if (!empty($search)) {
  $sql = "SELECT id, nome, iframe, imagem, historia FROM cad_cameras WHERE nome LIKE ?";
  $stmt = $conexao->prepare($sql);
  $searchTerm = "%$search%";
  $stmt->bind_param("s", $searchTerm);
  $stmt->execute();
  $resultado = $stmt->get_result();
} else {
  $sql = "SELECT id, nome, iframe, imagem, historia FROM cad_cameras";
  $resultado = $conexao->query($sql);
}

echo '<section class="camera-section" id="cameras">';
echo '<div class="cameracamera">';
echo '<h1>Câmeras</h1>';
echo '<div class="camera-videos">';

if ($resultado->num_rows > 0) {
  while ($row = $resultado->fetch_assoc()) {

    $id = $row['id'];
    $nome = $row['nome'];
    $imagem = $row['imagem'];
    $iframe = $row['iframe'];
    $historia = $row['historia'];

    if (empty($historia)) {
      $historia = updateCameraHistory($conexao, $id, $nome);
    }

    // CONSULTA DAS AVALIAÇÕES
    $sql_rating = "SELECT AVG(nota) as media, COUNT(*) as total FROM avaliacoes WHERE camera_id = ?";
    $stmt_rating = $conexao->prepare($sql_rating);
    $stmt_rating->bind_param("i", $id);
    $stmt_rating->execute();
    $result_rating = $stmt_rating->get_result();
    $row_rating = $result_rating->fetch_assoc();
    $media = ($row_rating['media']) ? number_format($row_rating['media'], 1) : '0.0';
    $total = ($row_rating['total']) ? $row_rating['total'] : '0';

    // Recupera a avaliação do usuário (se logado)
    $userRating = 0;
    if ($user_id > 0) {
      $stmt_userRating = $conexao->prepare("SELECT nota FROM avaliacoes WHERE camera_id = ? AND user_id = ?");
      $stmt_userRating->bind_param("ii", $id, $user_id);
      $stmt_userRating->execute();
      $result_userRating = $stmt_userRating->get_result();
      if ($result_userRating->num_rows > 0) {
        $row_userRating = $result_userRating->fetch_assoc();
        $userRating = intval($row_userRating['nota']);
      }
      $stmt_userRating->close();
    }

    // Arredonda a média para exibir as estrelas
    $roundedRating = round($media);

    // CONSULTA DAS VISUALIZAÇÕES (executada antes de montar o card)
    $sql_views = "SELECT total, online FROM visualizacoes WHERE camera_id = ?";
    $stmt_views = $conexao->prepare($sql_views);
    $stmt_views->bind_param("i", $id);
    $stmt_views->execute();
    $result_views = $stmt_views->get_result();
    $row_views = $result_views->fetch_assoc();
    $totalViews = isset($row_views['total']) ? $row_views['total'] : 0;
    $onlineViews = isset($row_views['online']) ? $row_views['online'] : 0;

    // Exibe o card da câmera
    echo '<div class="video-card" data-id="' . $id . '">';
    echo '<div class="card-image-container">';
    echo '<img src="' . $imagem . '" alt="' . $nome . '">';
    echo '<div class="card-overlay">';
    // Cabeçalho com o nome da câmera
    echo '<div class="camera-header">';
    echo '<h3 class="camera-name">' . $nome . '</h3>';
    echo '</div>'; // .camera-header

    // Seção que agrupa avaliação e estatísticas
    echo '<div class="camera-rating-info">';
    // Avaliação
    echo '<div class="camera-rating">';
    echo '<div class="star-rating">';
    $starsToFill = ($userRating > 0) ? $userRating : $roundedRating;
    for ($i = 1; $i <= 5; $i++) {
      if ($i <= $starsToFill) {
        echo "<span class='star filled'>&#9733;</span>";
      } else {
        echo "<span class='star'>&#9734;</span>";
      }
    }
    echo '</div>'; // .star-rating
    echo '<div class="rating-text">';
    echo '<span class="rating-average">' . $media . '</span> de <span class="rating-count">' . $total . '</span> avaliações';
    echo '</div>';
    echo '</div>'; // .camera-rating

    // Estatísticas de visualizações
    echo '<div class="camera-stats">';
    echo '<span class="stats-views"><i class="fa fa-eye"></i> ' . $totalViews . ' visualizações</span>';
    echo '<span class="stats-live"><i class="fa fa-circle"></i> ' . $onlineViews . ' ao vivo</span>';
    echo '</div>'; // .camera-stats
    echo '</div>'; // .camera-rating-info
    echo '</div>'; // .card-overlay
    echo '</div>'; // .card-image-container
    echo '</div>'; // .video-card

    // Prepara o iframe com proxy
    $iframe_proxy = str_replace("http://", "https://corsproxy.io/?", $iframe);

    // Cria o popup para exibição da câmera
    echo "<div id='popup-{$id}' class='popup'>"; // Notação mais clara com chaves
    echo "  <div class='popup-content'>";
    echo "    <div class='video-container'>";
    echo "      <span class='close' data-popup-id='popup-{$id}'>&times;</span>";
    echo "      <div id='video-container-{$id}' style='position: relative;'>"; // ID único
    echo "        <iframe id='iframe-{$id}' data-src='{$iframe_proxy}' title='{$nome}' frameborder='0' allow='autoplay; encrypted-media; fullscreen; picture-in-picture' allowfullscreen playsinline webkit-playsinline style='width:100%; pointer-events: none;'></iframe>"; // ID único
    echo "        <div style='position: absolute; bottom: 10px; right: 10px; pointer-events: auto; z-index: 10000;'>";
    echo "          <button onclick=\"enterFullScreen('video-container-{$id}')\" style='background-color: rgb(241, 196, 0); color: black; border: none; padding: 6px; border-radius: 12%; display: block;'>"; // Passa o ID correto
    echo "            <i class='fa fa-expand' aria-hidden='true'></i>";
    echo "          </button>";
    echo "          <button onclick='exitFullScreen()' style='background-color: rgb(241, 196, 0); color: black; border: none; padding: 6px; border-radius: 12%; display: none;'>";
    echo "            <i class='fa fa-compress' aria-hidden='true'></i>";
    echo "          </button>";
    echo "        </div>";
    echo "      </div>";
    // Popup com avaliação e visualizações
    echo "      <div id='video-description-$id' class='video-description'>";
    echo '<div class="popup-header">';
    echo '<h2 class="camera-title">' . $nome . '</h2>';
    echo '<div class="rating-container" data-camera-id="' . $id . '">';
    echo '<div class="star-rating">';
    for ($i = 1; $i <= 5; $i++) {
      $class = ($userRating > 0 && $i <= $userRating) ? 'selected' : '';
      echo "<span class='star $class' data-value='{$i}'>&#9733;</span>";
    }
    echo '</div>';
    echo '<div class="rating-info">';
    echo '<span class="rating-average">' . $media . '</span> (de <span class="rating-count">' . $total . '</span> avaliações)';
    echo '</div>';
    echo '</div>';
    echo '</div>';
    echo "      <div class='views-container'>";
    echo "        <span class='views-item'><i class='fa fa-eye'></i> <span id='total-$id'>" . $totalViews . "</span> visualizações</span>";
    echo "        <span class='views-item live'><i class='fa fa-circle'></i> <span id='online-$id'>" . $onlineViews . "</span> ao vivo</span>";
    echo "      </div>";
    $historiaCurta = substr($historia, 0, 2000);
    echo "      <div class='video-description'>";
    echo "        <p id='historia-$id' class='historia-text'>$historiaCurta...</p>";
    echo "        <button class='ver-mais' onclick='toggleHistoria($id)'>Ver mais</button>";
    echo "      </div>";
    echo "      </div>"; // .video-description (popup)
    echo "    </div>";
    // Seção de comentários
    echo "    <div class='comentarios'>";
    echo "      <div class='comments-list' id='comments-list-$id'>";
    echo "        <h1>Comentários</h1>";
    echo "      </div>";
    echo "      <div class='comment-input-container'>";
    echo "        <textarea id='new-comment-$id' placeholder='Escreva um comentário...'></textarea>";
    echo "        <button id='submit-comment-$id'>Publicar</button>";
    echo "      </div>";
    echo "    </div>";
    echo "  </div>";
    echo "</div>"; // .popup
  }
} else {
  echo "<p>Nenhuma câmera encontrada.</p>";
}

echo '</div>'; // .camera-videos
echo '</div>'; // .cameracamera

// Card lateral (side card)
echo '<div class="side-card">';
echo '<img src="imagens/postage.png" frameborder="0" width="300" alt="" class="add-img">';
echo '</div>';

echo '</section>';
?>

//////////////////// get_oauth_token.php
<?php

/**
 * PHPMailer - PHP email creation and transport class.
 * PHP Version 5.5
 * @package PHPMailer
 * @see https://github.com/PHPMailer/PHPMailer/ The PHPMailer GitHub project
 * @author Marcus Bointon (Synchro/coolbru) <phpmailer@synchromedia.co.uk>
 * @author Jim Jagielski (jimjag) <jimjag@gmail.com>
 * @author Andy Prevost (codeworxtech) <codeworxtech@users.sourceforge.net>
 * @author Brent R. Matzelle (original founder)
 * @copyright 2012 - 2020 Marcus Bointon
 * @copyright 2010 - 2012 Jim Jagielski
 * @copyright 2004 - 2009 Andy Prevost
 * @license https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html GNU Lesser General Public License
 * @note This program is distributed in the hope that it will be useful - WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.
 */

/**
 * Get an OAuth2 token from an OAuth2 provider.
 * * Install this script on your server so that it's accessible
 * as [https/http]://<yourdomain>/<folder>/get_oauth_token.php
 * e.g.: http://localhost/phpmailer/get_oauth_token.php
 * * Ensure dependencies are installed with 'composer install'
 * * Set up an app in your Google/Yahoo/Microsoft account
 * * Set the script address as the app's redirect URL
 * If no refresh token is obtained when running this file,
 * revoke access to your app and run the script again.
 */

namespace PHPMailer\PHPMailer;

/**
 * Aliases for League Provider Classes
 * Make sure you have added these to your composer.json and run `composer install`
 * Plenty to choose from here:
 * @see https://oauth2-client.thephpleague.com/providers/thirdparty/
 */
//@see https://github.com/thephpleague/oauth2-google
use League\OAuth2\Client\Provider\Google;
//@see https://packagist.org/packages/hayageek/oauth2-yahoo
use Hayageek\OAuth2\Client\Provider\Yahoo;
//@see https://github.com/stevenmaguire/oauth2-microsoft
use Stevenmaguire\OAuth2\Client\Provider\Microsoft;
//@see https://github.com/greew/oauth2-azure-provider
use Greew\OAuth2\Client\Provider\Azure;

if (!isset($_GET['code']) && !isset($_POST['provider'])) {
    ?>
<html>
<body>
<form method="post">
    <h1>Select Provider</h1>
    <input type="radio" name="provider" value="Google" id="providerGoogle">
    <label for="providerGoogle">Google</label><br>
    <input type="radio" name="provider" value="Yahoo" id="providerYahoo">
    <label for="providerYahoo">Yahoo</label><br>
    <input type="radio" name="provider" value="Microsoft" id="providerMicrosoft">
    <label for="providerMicrosoft">Microsoft</label><br>
    <input type="radio" name="provider" value="Azure" id="providerAzure">
    <label for="providerAzure">Azure</label><br>
    <h1>Enter id and secret</h1>
    <p>These details are obtained by setting up an app in your provider's developer console.
    </p>
    <p>ClientId: <input type="text" name="clientId"><p>
    <p>ClientSecret: <input type="text" name="clientSecret"></p>
    <p>TenantID (only relevant for Azure): <input type="text" name="tenantId"></p>
    <input type="submit" value="Continue">
</form>
</body>
</html>
    <?php
    exit;
}

require 'vendor/autoload.php';

session_start();

$providerName = '';
$clientId = '';
$clientSecret = '';
$tenantId = '';

if (array_key_exists('provider', $_POST)) {
    $providerName = $_POST['provider'];
    $clientId = $_POST['clientId'];
    $clientSecret = $_POST['clientSecret'];
    $tenantId = $_POST['tenantId'];
    $_SESSION['provider'] = $providerName;
    $_SESSION['clientId'] = $clientId;
    $_SESSION['clientSecret'] = $clientSecret;
    $_SESSION['tenantId'] = $tenantId;
} elseif (array_key_exists('provider', $_SESSION)) {
    $providerName = $_SESSION['provider'];
    $clientId = $_SESSION['clientId'];
    $clientSecret = $_SESSION['clientSecret'];
    $tenantId = $_SESSION['tenantId'];
}

//If you don't want to use the built-in form, set your client id and secret here
//$clientId = 'RANDOMCHARS-----duv1n2.apps.googleusercontent.com';
//$clientSecret = 'RANDOMCHARS-----lGyjPcRtvP';

//If this automatic URL doesn't work, set it yourself manually to the URL of this script
$redirectUri = (isset($_SERVER['HTTPS']) ? 'https://' : 'http://') . $_SERVER['HTTP_HOST'] . $_SERVER['PHP_SELF'];
//$redirectUri = 'http://localhost/PHPMailer/redirect';

$params = [
    'clientId' => $clientId,
    'clientSecret' => $clientSecret,
    'redirectUri' => $redirectUri,
    'accessType' => 'offline'
];

$options = [];
$provider = null;

switch ($providerName) {
    case 'Google':
        $provider = new Google($params);
        $options = [
            'scope' => [
                'https://mail.google.com/'
            ]
        ];
        break;
    case 'Yahoo':
        $provider = new Yahoo($params);
        break;
    case 'Microsoft':
        $provider = new Microsoft($params);
        $options = [
            'scope' => [
                'wl.imap',
                'wl.offline_access'
            ]
        ];
        break;
    case 'Azure':
        $params['tenantId'] = $tenantId;

        $provider = new Azure($params);
        $options = [
            'scope' => [
                'https://outlook.office.com/SMTP.Send',
                'offline_access'
            ]
        ];
        break;
}

if (null === $provider) {
    exit('Provider missing');
}

if (!isset($_GET['code'])) {
    //If we don't have an authorization code then get one
    $authUrl = $provider->getAuthorizationUrl($options);
    $_SESSION['oauth2state'] = $provider->getState();
    header('Location: ' . $authUrl);
    exit;
    //Check given state against previously stored one to mitigate CSRF attack
} elseif (empty($_GET['state']) || ($_GET['state'] !== $_SESSION['oauth2state'])) {
    unset($_SESSION['oauth2state']);
    unset($_SESSION['provider']);
    exit('Invalid state');
} else {
    unset($_SESSION['provider']);
    //Try to get an access token (using the authorization code grant)
    $token = $provider->getAccessToken(
        'authorization_code',
        [
            'code' => $_GET['code']
        ]
    );
    //Use this to interact with an API on the users behalf
    //Use this to get a new access token if the old one expires
    echo 'Refresh Token: ', htmlspecialchars($token->getRefreshToken());
}
